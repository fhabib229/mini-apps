
Use Express to serve up an index.html file and its associated assets
Build your UI using ReactJS and pre-compile your views using Babel
Use MongoDB or MySQL to store your user data
Build your Express app inside server.js and your client app inside the client folder.
For the basic requirements, you MUST place all of your React components into one file, app.jsx.
Link your transpiled component file from index.html. DO NOT USE WEBPACK
For ease of development, be sure to set Babel to watch for changes in your app.js file to recompile those changes immediately.
Additionally, be sure to use nodemon to watch for changes in server.js.
Every run through the checkout process (each time Checkout is clicked) creates a new record in your server's database,
and each step in the checkout process saves its piece of the data to that record (the data is saved when Next is clicked).

1. Install Dependencies
    -ReactJS
    -Express
    -MySQL
    -Babel
    -nodemon
2. Create First Page: Checkout button
3. Create Second Page: Form 1
    -Name
    -Email
    -Password
    -Next button, which saves this data into SQL DB*
4. Create Third Page: Form 2
    -Address line 1
    -Address line 2
    -City
    -State
    -Zip
    -Phone
    -Next button, which saves this data into SQL DB*
5. Create Fourth Page: Form 3
    -Credit Card Number
    -Expiration Date
    -CVV
    -Billing Zip Code
    -Next button, which saves this data into SQL DB*
6. Create Final Page: Summary
    -Form 1
    -Form 2
    -Form 3
    -Purchase button, returns user to first Page
7. Create SQL DB
  -Define Schema
  -Create Tables
  -Test entries into Tables
  -Save data on forms to DB at each next press*